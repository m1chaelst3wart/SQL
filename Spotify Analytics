Spotify Analytics

# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

# Creating the table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

# Then I entered the Spotify Data .csv into the table
# Finally, I analyzed the data using the following SQL.

# First, I glanced at the data
SELECT *
FROM BIT_DB.Spotifydata

# Then I looked just at the artist and their popularity
SELECT artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY artist_name

# Then I calculated the average popularity for a given artist
SELECT artist_name, ROUND(avg(popularity),0) avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name

# Then I ranked the artists by their average popularity
SELECT artist_name, ROUND(avg(popularity),0) avg_popularity
FROM BIT_DB.SpotifyData
GROUP BY artist_name
ORDER BY avg_popularity desc

# Finally, I found the top ten most popular songs
SELECT artist_name, track_name, popularity
FROM BIT_DB.SpotifyData
ORDER BY popularity desc
Limit 10
